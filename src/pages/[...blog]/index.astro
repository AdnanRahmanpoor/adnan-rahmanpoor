---
import { BLOG } from '~/config.mjs';
import "~/components/style.css";

import Layout from '~/layouts/PageLayout.astro';
import SinglePost from '~/components/blog/SinglePost.astro';
import ToBlogLink from '~/components/blog/ToBlogLink.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { fetchPosts } from '~/utils/blog';
import { findImage } from '~/utils/images';

export async function getStaticPaths() {
  if (BLOG?.disabled || BLOG?.post?.disabled) return [];
  return (await fetchPosts()).map((post) => ({
    params: {
      blog: post.permalink,
    },
    props: { post },
  }));
}

const { post } = Astro.props;
const url = getCanonical(getPermalink(post.permalink, 'post'));

const meta = {
  title: post.title,
  description: post.description,
  canonical: post.canonical || url,
  image: await findImage(post.image),
  noindex: BLOG?.post?.noindex,
  ogType: 'article',
};
---

<Layout {meta}>
  <SinglePost post={{ ...post, image: meta.image }} url={url} />
  <ToBlogLink />
  <div class="giscus px-4 py-16 sm:px-6 mx-auto lg:px-8 lg:py-20 max-w-4xl"></div>
  <script>
    // Get HTML head element
    var head = document.getElementsByTagName('HEAD')[0];
    
    // Create new link Element
    var darkLink = document.createElement('link');
    var lightLink = document.createElement('link');

    // set the attributes for link element
    darkLink.rel = 'stylesheet';
    lightLink.rel = 'stylesheet';

    darkLink.type = 'text/css';
    lightLink.type = 'text/css';

    darkLink.href = '/dark.css';
    lightLink.href = '/light.css';

    // Append link element to HTML head
    head.appendChild(darkLink);
    head.appendChild(lightLink);
    
    function setGiscusTheme() {
      function getGiscusTheme() {
        const siteTheme = localStorage.theme;
        const giscusTheme = siteTheme === "light" ? lightLink : darkLink;
        return giscusTheme;
      }
      function sendMessage(message) {
        const iframe = (document.querySelector('iframe.giscus-frame') as HTMLIFrameElement);
        if (!iframe) return;
        iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');
      }
      sendMessage({
        setConfig: {
          theme: getGiscusTheme(),
        },
      });
    }
    
    document.addEventListener('DOMContentLoaded', function () {
      const giscusAttributes = {
      "src" : "https://giscus.app/client.js",
      "data-repo":"AdnanRahmanpoor/adnanrp",
      "data-repo-id":"R_kgDOJm7V2g",
      "data-category":"Announcements",
      "data-category-id":"DIC_kwDOJm7V2s4CW0aJ",
      "data-mapping":"url",
      "data-strict":"0",
      "data-reactions-enabled":"1",
      "data-emit-metadata":"0",
      "data-input-position":"top",
      "data-theme":setGiscusTheme(),
      "data-lang":"en",
      "crossorigin":"anonymous",
      "async" : ""
    };
    
      // Dynamically create script tag
      const giscusScript = document.createElement("script");
      Object.entries(giscusAttributes).forEach(([key, value]) => giscusScript.setAttribute(key, value));
      document.body.appendChild(giscusScript);
    
      // Update giscus theme when theme switcher is clicked
      const toggle = document.querySelector('#darklightmode');
      if (toggle) {
        toggle.addEventListener('click', setGiscusTheme);
      }
    });
  </script>
  
  <!-- <script src="https://giscus.app/client.js"
        data-repo="AdnanRahmanpoor/adnanrp"
        data-repo-id="R_kgDOJm7V2g"
        data-category="Announcements"
        data-category-id="DIC_kwDOJm7V2s4CW0aJ"
        data-mapping="url"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="preferred_color_scheme"
        data-lang="en"
        crossorigin="anonymous"
        async>
  </script> -->
</Layout>